apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.ardic.android.sampleiotigniteprojectwithdynamicconfigurations"
            versionCode code
            versionName "0.9." + (versionProps['VERSION_CODE'].toInteger() - 8)
            minSdkVersion 16
            targetSdkVersion 27
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        debug {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all {
                variant -> renameAPK(variant, defaultConfig, 'R')
            }
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

}
repositories {
    mavenCentral()
    maven {
        url "http://repo.maven.apache.org/maven2"
    }

    maven {
        url "https://repo.iot-ignite.com/content/repositories/releases"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'com.ardic.android.iot:HwNodeAppTemplates:1.1'
    implementation 'com.ardic.android:IoTIgnite:0.8.2'
    implementation 'com.ardic.android:utilitylib:0.1'
    implementation 'com.ardic.android:connectivitylib:0.2'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'com.afollestad.material-dialogs:core:0.9.1.0'
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'org.jmdns:jmdns:3.5.1'
}

def renameAPK(variant, defaultConfig, buildType) {
    variant.outputs.all { output ->
        def formattedDate = new Date().format('yyyyMMdd')
        def fileName = applicationName + "_v" + defaultConfig.versionName + "-" + formattedDate + "-" + buildType + ".apk"
        outputFileName = fileName
    }
}
